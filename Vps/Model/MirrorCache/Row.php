<?phpclass Vps_Model_MirrorCache_Row extends Vps_Model_Proxy_Row{    private $_overrideSetPrimaryException = false;    protected $_primaryKey;    protected function _init()    {        parent::_init();        $this->_primaryKey = $this->getModel()->getPrimaryKey();    }    protected function _afterSave()    {        parent::_afterSave();        $this->getModel()->checkCache();    }    protected function _beforeInsert()    {        parent::_beforeInsert();        $sm = $this->getModel()->getSourceModel();        $primaryKey = $this->_primaryKey;        $sr = $sm->createRow();        foreach ($this->toArray() as $k => $v) {            if ($k != $primaryKey) $sr->$k = $v;        }        $sr->save();        $this->overrideSetPrimaryKey($sr->$primaryKey);    }    protected function _beforeUpdate()    {        parent::_beforeUpdate();        $sm = $this->getModel()->getSourceModel();        $primaryKey = $this->_primaryKey;        $sr = $sm->getRow($this->$primaryKey);        if (!$sr) {            throw new Vps_Exception("MirrorCache Datenintegritätsfehler. Bei einem Update konnte die Row im SourceModel nicht gefunden werden.");        }        foreach ($this->toArray() as $k => $v) {            if ($k != $primaryKey) $sr->$k = $v;        }        $sr->save();        $this->overrideSetPrimaryKey($sr->$primaryKey);    }    /**     * MirrorCache Model kann noch nicht löschen - bei benutzer könnte es     * Probleme geben und es wird noch nicht benötigt.     */    public function delete()    {        throw new Vps_Exception_NotYetImplemented("MirrorCacheModel is not able to delete yet");    }    /**     * Diese Funktion darf nur kontrolliert aufgerufen werden!     * Wenn der Primary gesetzt werden     * soll, muss das über __set() laufen und dort implementiert werden.     * Ist aber bei User-Mirroring zu gefährlich, deshalb wird bei einem set     * von außen eine Exception geworfen.     */    public function overrideSetPrimaryKey($primaryValue)    {        $this->_overrideSetPrimaryException = true;        $primaryKey = $this->_primaryKey;        $this->$primaryKey = $primaryValue;        $this->_overrideSetPrimaryException = false;    }    public function __set($name, $value)    {        if ($name == $this->_primaryKey && !$this->_overrideSetPrimaryException) {            // wenn das implementiert wird vorsicht wegen user-model. bei dem            // darf der primary key zB wirklich (!) nicht geändert werden            throw new Vps_Exception_NotYetImplemented("Primary key may not be changed when using a MirrorCache");        }        parent::__set($name, $value);    }}