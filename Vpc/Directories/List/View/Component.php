<?phpclass Vpc_Directories_List_View_Component extends Vpc_Abstract_Composite_Component    implements Vpc_Paging_ParentInterface{    private $_items;        public static function getSettings()    {        $ret = parent::getSettings();        $ret['generators']['child']['component']['paging'] = 'Vpc_Paging_Component';        $ret['cssClass'] = 'webStandard';        $ret['viewCache'] = false;        return $ret;    }    protected function _getSelect()    {        return $this->getData()->parent->getComponent()->getSelect();    }    protected function _getItems()    {        if (!$this->_items) {            $select = $this->_getSelect();            if (!$select) return array();            $this->getData()->getChildComponent('-paging')                ->getComponent()->limitSelect($select);            $select->group($select->getTableName().'.id');            $this->_items = $this->getData()->parent->getComponent()->getItemDirectory()                        ->getChildComponents($select);            foreach ($this->_items as $item) {                $this->getData()->parent->getComponent()->getItemDirectory()                    ->getComponent()->callModifyItemData($item);            }        }        return $this->_items;    }    public function getTemplateVars()    {        $ret = parent::getTemplateVars();        $ret['items'] = $this->_getItems();        $ret['directory'] = $this->getData()->parent->getComponent()->getItemDirectory();        return $ret;    }    public function getPagingCount()    {        return $this->_getSelect();    }        public function hasContent()    {        if (count($this->_getItems()) > 0) {            return true;        }        return parent::hasContent();    }}