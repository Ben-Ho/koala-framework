<?phpclass Vpc_Directories_Category_Detail_List_Component extends Vpc_Directories_List_Component{    public function getSelect()    {        $select = parent::getSelect();        $modelName = Vpc_Abstract::getSetting(            $this->getData()->parent->parent->componentClass, 'categoryToItemModelName'        );        $refData = self::getTableReferenceData($modelName, 'Item');        if (!Vpc_Abstract::getSetting(get_class($this), 'generatorJoins')) {            $select->join($refData['tableName'],                          $refData['tableName'].'.'.$refData['itemColumn'].'='                            .$refData['refTableName'].'.'.$refData['refItemColumn'],                          array());        }        $categoryId = $this->getData()->parent->id;        $select->where($refData['tableName'].'.category_id = ?', $categoryId);        return $select;    }    protected function _getItemDirectory()    {        return $this->getData()->parent->parent->parent;    }    static public function getTableReferenceData($relationModel, $rule/* = 'Item'*/)    {        if (is_string($relationModel)) {            $relationModel = Vps_Model_Abstract::getInstance($relationModel);        }        $reference = $relationModel->getReference($rule);        $dataModel = Vps_Model_Abstract::getInstance($reference['refModelClass']);        while ($dataModel instanceof Vps_Model_Proxy) {            $dataModel = $dataModel->getProxyModel();        }        return array(            'tableName' => $relationModel->getTableName(),            'itemColumn' => $reference['column'],            'refItemColumn' => $dataModel->getPrimaryKey(),            'refTableName' => $dataModel->getTableName()        );    }}