<?phpclass Vpc_Directories_Category_ShowCategories_Component extends Vpc_Directories_List_Component{    private $_categories;    public static function getSettings()    {        $ret = parent::getSettings();        $ret['showDirectoryClass'] = 'Vpc_Directories_Item_Directory_Component'; // nur fÃ¼r form        $ret['hideDirectoryClasses'] = array();        return $ret;    }    private function _getCategories()    {        if (!isset($this->_categories)) {            $t = new Vpc_Directories_Category_ShowCategories_Model();            $this->_categories = $t->fetchAll(array('component_id = ?' => $this->getDbId()));        }        return $this->_categories;    }    protected function _getItemDirectory()    {        $categories = $this->_getCategories();        if (count($categories)) {            return Vps_Component_Data_Root::getInstance()                ->getComponentByDbId($categories->current()->directory_component_id);        }        return null;    }    public function getSelect()    {        $select = parent::getSelect();        if (!$select) return null;        $tableName = Vpc_Abstract::getSetting(            $this->getItemDirectory()->getChildComponent('_categories')->componentClass,            'categoryToItemTableName'        );        $refData = Vpc_Directories_Category_Detail_List_Component::getTableReferenceData($tableName);        $select->join($refData['tableName'],                      $refData['tableName'].'.'.$refData['itemColumn'].'='                        .$refData['refTableName'].'.'.$refData['refItemColumn'],                      array());        $ids = array();        foreach ($this->_getCategories() as $category) {            $ids[] = Vps_Registry::get('db')->quote($category->category_id);        }        if (!$ids) return null;        $select->where($refData['tableName'].'.category_id IN ('.implode(',', $ids).')');        return $select;    }}