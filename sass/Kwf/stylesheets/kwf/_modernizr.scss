// Modernizr mixin to create html.modernizr selector

@mixin _modernizr($htmlClass) {
    @if & == null {
      html.#{$htmlClass} {
        @content;
      }
    } @else {

        $selectors: selector_parse(&);
        $newSelectors: ();
        @each $selector in $selectors {
            $newSelector: ();
            $replacedHtml: false;
            @each $part in $selector {
                @if str-index($part, "html")==1{
                    $part: "#{$part}.#{$htmlClass}";
                    $replacedHtml: true;
                }
                $newSelector: append($newSelector, $part);
            }
            @if not($replacedHtml) {
                $newSelector: join(("html.#{$htmlClass}"), $newSelector);
            }
            $newSelectors: append($newSelectors, $newSelector, comma);
        }
        @at-root {
            #{$newSelectors} {
                @content;
            }
        }
    }
}

// Extra param if feature-name and className does not match
// (like for css/checked => html.checked)
@mixin modernizr($feature, $className:"") {
    @if $className == "" {
        $className: $feature;
    }
    $className: to-lower-case($className);
    @include _modernizr("kwfUp-#{$className}") {
        @content;
    }
}
@mixin modernizr-no($feature, $className:"") {
    @if $className == "" {
        $className: $feature;
    }
    $className: to-lower-case($className);
    @include _modernizr("kwfUp-no-#{$className}") {
        @content;
    }
}
